apply plugin: 'com.android.library'

android {
    def globalConfiguration = rootProject.ext
    compileSdkVersion globalConfiguration.androidCompileSdkVersion
    buildToolsVersion globalConfiguration.androidBuildToolsVersion
    publishNonDefault true

    defaultConfig {
        minSdkVersion globalConfiguration.androidMinSdkVersion
        targetSdkVersion globalConfiguration.androidTargetSdkVersion
        versionCode globalConfiguration.androidVersionCode
        versionName globalConfiguration.androidVersionName
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'    // Due to Robolectric that modifies the manifest when running tests
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':domain')
    def dataDependencies = rootProject.ext.dataDependencies
    provided dataDependencies.javaxAnnotation
    compile dataDependencies.javaxInject
    compile dataDependencies.okHttp
    compile dataDependencies.gson
    compile dataDependencies.rxJava
    compile dataDependencies.retrofit
    compile dataDependencies.rxAndroid
    compile dataDependencies.androidAnnotations
    compile project(':app-common-lib')

}



tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

